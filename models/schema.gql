type Party {
	owner: String!
	code: Int!
	playlist: [String]
	fallbackPlaylist: String!
	playbackDevice: String
	users: [User] @relation
	active: Boolean!
	accessToken: String!
	refreshToken: String!
}

type User {
	name: String! @unique
	party: Party
}

type Mutation {
	updatePlaylist( id: ID!, data: String!): Party @resolver(name: "add_to_playlist", paginated: false)
	removeFromPlaylist( id: ID!, data: [String]!): Party @resolver(name: "remove_from_playlist", paginated: false)
}

type Query {
	findPartyByOwner(owner: String!): Party
	findPartyByCode(code: Int!): Party
	findPartyByOwnerAndCode(owner: String!, code: Int!): Party
	allParty: [Party!]
	party: Party
	findUserByName(name: String!): User
}